{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: 'http://localhost:3001/api'\n});\n\n// 请求拦截器，用于在每个请求中附加token\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// --- 认证 API ---\nexport const auth = {\n  login: credentials => apiClient.post('/auth/login', credentials),\n  register: userData => apiClient.post('/auth/register', userData)\n};\n\n// --- 数据 API ---\n\n// 灵感 API\nexport const inspirations = {\n  getAll: () => apiClient.get('/inspirations'),\n  create: data => apiClient.post('/inspirations', data),\n  update: (id, data) => apiClient.put(`/inspirations/${id}`, data),\n  delete: id => apiClient.delete(`/inspirations/${id}`)\n};\n\n// 知识 API\nexport const knowledge = {\n  getAll: () => apiClient.get('/knowledge'),\n  create: data => apiClient.post('/knowledge', data),\n  update: (id, data) => apiClient.put(`/knowledge/${id}`, data),\n  delete: id => apiClient.delete(`/knowledge/${id}`)\n};\n\n// 任务 API\nexport const tasks = {\n  getAll: () => apiClient.get('/tasks'),\n  create: data => apiClient.post('/tasks', data),\n  update: (id, data) => apiClient.put(`/tasks/${id}`, data),\n  delete: id => apiClient.delete(`/tasks/${id}`)\n};\n\n// 目标 API\nexport const goals = {\n  getAll: () => apiClient.get('/goals'),\n  create: data => apiClient.post('/goals', data),\n  update: (id, data) => apiClient.put(`/goals/${id}`, data),\n  delete: id => apiClient.delete(`/goals/${id}`)\n};\n\n// 分类 API\nexport const categories = {\n  getAll: () => apiClient.get('/categories'),\n  create: data => apiClient.post('/categories', data)\n};\n\n// 搜索 API\nexport const search = {\n  run: searchTerm => apiClient.get(`/search?q=${encodeURIComponent(searchTerm)}`)\n};\n\n// 统计 API\nexport const statistics = {\n  get: () => apiClient.get('/statistics')\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","auth","login","credentials","post","register","userData","inspirations","getAll","get","data","update","id","put","delete","knowledge","tasks","goals","categories","search","run","searchTerm","encodeURIComponent","statistics"],"sources":["C:/Users/WangKun/Desktop/new/personal-growth-app/client/src/services/api.js"],"sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: 'http://localhost:3001/api',\r\n});\r\n\r\n// 请求拦截器，用于在每个请求中附加token\r\napiClient.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n}, error => {\r\n  return Promise.reject(error);\r\n});\r\n\r\n// --- 认证 API ---\r\nexport const auth = {\r\n  login: (credentials) => apiClient.post('/auth/login', credentials),\r\n  register: (userData) => apiClient.post('/auth/register', userData),\r\n};\r\n\r\n// --- 数据 API ---\r\n\r\n// 灵感 API\r\nexport const inspirations = {\r\n  getAll: () => apiClient.get('/inspirations'),\r\n  create: (data) => apiClient.post('/inspirations', data),\r\n  update: (id, data) => apiClient.put(`/inspirations/${id}`, data),\r\n  delete: (id) => apiClient.delete(`/inspirations/${id}`),\r\n};\r\n\r\n// 知识 API\r\nexport const knowledge = {\r\n  getAll: () => apiClient.get('/knowledge'),\r\n  create: (data) => apiClient.post('/knowledge', data),\r\n  update: (id, data) => apiClient.put(`/knowledge/${id}`, data),\r\n  delete: (id) => apiClient.delete(`/knowledge/${id}`),\r\n};\r\n\r\n// 任务 API\r\nexport const tasks = {\r\n  getAll: () => apiClient.get('/tasks'),\r\n  create: (data) => apiClient.post('/tasks', data),\r\n  update: (id, data) => apiClient.put(`/tasks/${id}`, data),\r\n  delete: (id) => apiClient.delete(`/tasks/${id}`),\r\n};\r\n\r\n// 目标 API\r\nexport const goals = {\r\n  getAll: () => apiClient.get('/goals'),\r\n  create: (data) => apiClient.post('/goals', data),\r\n  update: (id, data) => apiClient.put(`/goals/${id}`, data),\r\n  delete: (id) => apiClient.delete(`/goals/${id}`),\r\n};\r\n\r\n// 分类 API\r\nexport const categories = {\r\n  getAll: () => apiClient.get('/categories'),\r\n  create: (data) => apiClient.post('/categories', data),\r\n};\r\n\r\n// 搜索 API\r\nexport const search = {\r\n  run: (searchTerm) => apiClient.get(`/search?q=${encodeURIComponent(searchTerm)}`),\r\n};\r\n\r\n// 统计 API\r\nexport const statistics = {\r\n  get: () => apiClient.get('/statistics'),\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}