{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WangKun\\\\Desktop\\\\new\\\\personal-growth-app\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport * as api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // 你可以在这里添加一个API调用来验证token并获取用户信息\n      // 为了简单起见，我们暂时只解码token\n      try {\n        const storedUser = JSON.parse(localStorage.getItem('user'));\n        if (storedUser) {\n          setUser(storedUser);\n        }\n      } catch (error) {\n        console.error(\"Failed to parse user from localStorage\", error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = useCallback(async (email, password) => {\n    try {\n      const response = await api.auth.login({\n        email,\n        password\n      });\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      setUser(response.data.user);\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error('Login failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || '登录失败');\n    }\n  }, []);\n  const register = useCallback(async (username, email, password) => {\n    try {\n      await api.auth.register({\n        username,\n        email,\n        password\n      });\n    } catch (error) {\n      var _error$response3, _error$response3$data, _error$response4, _error$response4$data;\n      console.error('Registration failed:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message);\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || '注册失败');\n    }\n  }, []);\n  const logout = useCallback(() => {\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }, []);\n  const authContextValue = {\n    user,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"l6zUyVi7WcY8h9thikngMHGXU8Y=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","storedUser","JSON","parse","error","console","removeItem","login","email","password","response","auth","setItem","data","stringify","_error$response","_error$response$data","_error$response2","_error$response2$data","message","Error","register","username","_error$response3","_error$response3$data","_error$response4","_error$response4$data","logout","authContextValue","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/WangKun/Desktop/new/personal-growth-app/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\nimport * as api from '../services/api';\n\nexport const AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // 你可以在这里添加一个API调用来验证token并获取用户信息\n      // 为了简单起见，我们暂时只解码token\n      try {\n        const storedUser = JSON.parse(localStorage.getItem('user'));\n        if (storedUser) {\n          setUser(storedUser);\n        }\n      } catch (error) {\n        console.error(\"Failed to parse user from localStorage\", error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = useCallback(async (email, password) => {\n    try {\n      const response = await api.auth.login({ email, password });\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      setUser(response.data.user);\n    } catch (error) {\n      console.error('Login failed:', error.response?.data?.error || error.message);\n      throw new Error(error.response?.data?.error || '登录失败');\n    }\n  }, []);\n\n  const register = useCallback(async (username, email, password) => {\n    try {\n      await api.auth.register({ username, email, password });\n    } catch (error) {\n      console.error('Registration failed:', error.response?.data?.error || error.message);\n      throw new Error(error.response?.data?.error || '注册失败');\n    }\n  }, []);\n\n  const logout = useCallback(() => {\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }, []);\n\n  const authContextValue = {\n    user,\n    isAuthenticated: !!user,\n    loading,\n    login,\n    register,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={authContextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}